11. ###Add-content | PowerShell Append to file### -> appends the content to the specified item or a file, such as adding words to the file.
////////////////////////////////////////////////////////////////////
add-content sp.txt -value "PowerShell is available in Windows" -> appends a value to a specific file in the current directory.
add-content .\*.txt -value "Windows PowerShell" -> appends the value to all text files in the current directory.
add-content filename.txt -value (Get-Date) -> appends the date to a specified file in the current directory and shows the date in PS console.

$get = Get-Content blabla.txt
Add-Content new1.txt -Value $get	-> takes the content from a file and stores it in a variable.
get-content new1.txt
			
Add-Content NewFile.txt -Value (Get-Content blabla.txt)
get-content NewFile.txt			-> creates a new file and copies the content of an existing file into the new file.
////////////////////////////////////////////////////////////////////

12. ###Clear-Content### -> deletes the content of an item, but it does not delete the itemm such as deleting the text from the file.
////////////////////////////////////////////////////////////////////
clear-content -Path or use ls and cd then -> clear-content filename.txt -> deletes the content from the file filename.txt 
clear-content -Path or use ls and cd then -> clear-content *txt -> deletes the content from all txt. files. 
/////////////////////////////////////////////////////////////////////

13. ###Get-Content### -> gets the content of an item at a specified location.
//////////////////////////////////////////////////////////////////////////
get-content np.txt -> used to display the content of an np.txt file.
get-content np.txt -Totalcount 10 -> displays the specific number of lines from the text file. (this example is 10 lines.).
(get-content np.txt -Totalcount 8) [-1] -> display the specific line of that content.
get-content np.txt -Tail 1 -> displays the last line of the content from the file. -Tail parameter gets the last line of the file. 
//////////////////////////////////////////////////////////////////////////

14. ###Get-Date### -> displays the current date and time.
//////////////////////////////////////////////////////////////////////////
Get-Date -> shows the current date and time of the systems.
Get-Date -DispalysHint Date -> Get-Date uses the -DisplayHint parameter with the values argument to get the date only.
Get-Date -Format "dddd MM/dd/yyyy HH:mm" -> display current date and time with a NET.format specifier.
(Get-Date) .Month -> display the month. 
/////////////////////////////////////////////////////////////////////////

15. ###Set-Content | PowerShell write to file### -> writes the new content or replacing the existing  content ina file.
/////////////////////////////////////////////////////////////////////////////
set-content -Path pw.txt -Value "End"/get-content pw.txt -> creates a new file and writes to it.
set-content pw.txt -Value "From end to start" -> replaces the content of a file in the current directory. 
set-content dt.txt -Value (Get-Date)/get-content dt.txt -> creates a new file and writes the current date and time. 
/////////////////////////////////////////////////////////////////////////////

16. ###Out-File### -> sends the output to a specific file. 
/////////////////////////////////////////////////////////
get.childitem | out-file -FilePath (use ls and cd) -> sends the output to the get-childitem cmdlet to the text file whose path is specified in the command.
/////////////////////////////////////////////////////////

17. ###Write-Host### -> is used to write the customized output to a host.
////////////////////////////////////////////////////////////////////////
Write-Host (2,4,6,8,10,12) -Separator ", *2= " -> is used to display the numbers from two to twelve.
Write-Host (2,4,6,8,10,12) -Separator ", *2= " -ForegroundColor Red -BackgroundColor Black -> change colours.
////////////////////////////////////////////////////////////////////////

18. ###Get-Command### -> is used to get all the commands which are installed on the computer system.
//////////////////////////////////////////////////////////////////////////////////////////////////
get-command -> displays akk the cmdlets,aliases and functions on the PowerShell console. 
get-command -ListImported -> displays all commands in the current session. 
get-command -Module Microsoft.PowerShell.Security, Microsoft.PowerShell.Utility -> get commands in modules.
get-command get-childitem -args cert: -syntax -> uses the -ArgumentList and -Syntax parameters to get the syntax of Get-ChildItem cmdlet. 
get-command * -> display all the commands of all types on a local computer.
(get-command get-item).modulname -> display the name of a module in which the Get-Item cmdlet originated. 
/////////////////////////////////////////////////////////////////////////////////////////////////

19. ###Get-Help### -> is used to display information about the PowerShell commands and concepts.
////////////////////////////////////////////////////////////////////////////////////////////
get-help get-item -> display basic help information about a cmdlet.
get-help get-item -Detailed -> display more information for a cmdlet.
get-help get-item -full -> full view of help article.
get-help get-item -examples -> display the selected portion of the get-item cmdlet. 
get-help get-item -online -> display an online version of the help of a cmdlet.
get-help -> display about the help PowerShell system.
get-help * -> display all available help articles.
////////////////////////////////////////////////////////////////////////////////////////////

20. ###Start-Process### -> starts one or more processes on the local computer (saps and star = aliases).
/////////////////////////////////////////////////////////////////////////////////////////////////////
$variable = path (use pwd and copy paste)/start-process $variable -> first command uses the variable which stores the text file, second command opens a text file by using the variable Start-process cmdlet.
Start-Process -FilePath "powershell" -Verb RunAs -> start powershell as an admin.
Start-Process -FilePath "notepad" -Wait -Windowstyle Maximized -> starts the notepad.exe in maximized window.
/////////////////////////////////////////////////////////////////////////////////////////////////////

21. ###Test-Path### -> returns $true if all the elements of a file or directory exist, otherwise $false.
/////////////////////////////////////////////////////////////////////////////////////////////////////
Test-Path -Path "C:\Program files"/True -> checks whether all the elements in the path of file exist or not.
Test-Path -PATH "HKLM:\Software\Microsoft\PowerShell\1\ShellIds\Microsoft.PowerShell"/True -> check the path in the registry key.
Test-Path D:\k.txt -OlderThan "December 10, 2019" /True/False -> test a file older than the specified date.
/////////////////////////////////////////////////////////////////////////////////////////////////////

22. ###ForEach-Object### -> executes a block of statements against each item in a collection of an input objects.
/////////////////////////////////////////////////////////////////////////////////////////////////////////////
get-childitem C: | foreach-object {write-Host $_} -> use pipe (|) to pass output of get.childitem to the ForEach-Object command.
/////////////////////////////////////////////////////////////////////////////////////////////////////////////
































